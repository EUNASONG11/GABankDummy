<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.projectdummy.account.AccountMapper">


    <insert id="saveBankAccount" useGeneratedKeys="true" keyProperty="accountId">
        INSERT INTO bank_account
            (product_id, cust_id, employee_id, account_num, account_password, money, status_code, created_at)
        VALUES
            (#{productId},#{custId},#{employeeId},#{accountNum},#{accountPassword},#{money},#{statusCode}, #{createdAt})
    </insert>

    <select id="selFinalPk">
        select account_id
        from bank_account
        order by account_id desc
        limit 1
    </select>

    <select id="selAccountByDepositCode">
        select account_id, a.created_at
        from deposit A
        join bank_account B on a.deposit_id = b.product_id
        where a.deposit_code = #{code}
    </select>

    <select id="selAccountId">
        SELECT account_id, a.product_id, created_at
        FROM bank_account A
        JOIN product B ON a.product_id = b.product_id
        WHERE b.product_id &lt; 50001 OR b.product_id &gt; 200000
        UNION
        SELECT account_id, a.product_id, created_at
        FROM bank_account a
        JOIN savings_deposit b ON a.product_id = b.sa_deposit_id
        WHERE out_flag = 0
    </select>

    <select id="selLoanUser">
        select cust_name, account_num, bank_code, use_account
        from bank_account A
        join customer B on a.cust_id = b.cust_id
        join loan_account C on a.account_id = c.account_id
        where a.account_id = #{accountId}
    </select>

    <select id="selTranFeeId">
        select transaction_fee_id
        from transaction_fee
    </select>

    <insert id="insBankAccount">
        insert into bank_account
        (account_id, product_id, cust_id, employee_id, account_num, account_password, money, status_code, created_at)
        values
        (#{accountId} ,#{productId}, #{custId}, #{employeeId}, #{accountNum}, #{accountPassword}, #{money}, #{statusCode}, #{createdAt})
    </insert>

    <insert id="insBankInternalAccount">
        insert into bank_internal_account
        (account_code, account_num, flag, created_at, updated_at)
        values
        (#{account_code}, #{account_num}, #{flag}, #{created_at}, #{updated_at})
    </insert>

    <insert id="insLoanAccount">
        insert into loan_account
        (account_id, loan_money, discounted_rate, additional_rate, rate_id, end_at, redemption_code, loan_application_id, bank_code, use_account)
        values
        (#{accountId}, #{loanMoney}, #{discountedRate}, #{additionalRate}, #{rateId}, #{endAt}, #{redemptionCode}, #{loanApplicationId}, #{bankCode}, #{useAccount})
    </insert>

    <insert id="insTranHistory">
        insert into transaction_history
        (transaction_fee_id, account_id, flag, money, to_name, account_num, to_bank_code, created_at, location, hs_money, atm_code)
        values
        (#{transactionFeeId}, #{accountId}, #{flag}, #{money}, #{toName}, #{accountNum}, #{toBankCode}, #{createdAt}, #{location}, #{hsMoney}, #{atmCode})

    </insert>

    <select id="findOwnAccountNum">
        SELECT b.account_num
        FROM bank_account b
        JOIN deposit d
        ON b.product_id=d.deposit_id
        WHERE d.deposit_code IN (00501, 00502, 00505)
        AND b.cust_id=#{custId}
    </select>

    <select id="selAvailableCheckBillAccounts">
        SELECT ba.account_id, ba.created_at
        FROM bank_account ba
        JOIN deposit d
        ON ba.product_id = d.deposit_id
        WHERE d.deposit_code = '00501'
        AND ba.status_code = '00201'
    </select>

</mapper>
